// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/product.proto
// </auto-generated>
// Original file comments:
// File is wi=ritten in Protocol Buffers version 3 syntax.
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ProductGrpc.Protos {
  public static partial class ProductProtoService
  {
    static readonly string __ServiceName = "ProductProtoService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.GetProductRequest> __Marshaller_GetProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.GetProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.ProductModel> __Marshaller_ProductModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.ProductModel.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.GetAllProductsRequest> __Marshaller_GetAllProductsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.GetAllProductsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.AddProductRequest> __Marshaller_AddProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.AddProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.UpdateProductRequest> __Marshaller_UpdateProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.UpdateProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.DeleteProductRequest> __Marshaller_DeleteProductRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.DeleteProductRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.DeleteProductResponse> __Marshaller_DeleteProductResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.DeleteProductResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ProductGrpc.Protos.InsertBulkProductResponse> __Marshaller_InsertBulkProductResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ProductGrpc.Protos.InsertBulkProductResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProductGrpc.Protos.GetProductRequest, global::ProductGrpc.Protos.ProductModel> __Method_GetProduct = new grpc::Method<global::ProductGrpc.Protos.GetProductRequest, global::ProductGrpc.Protos.ProductModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProduct",
        __Marshaller_GetProductRequest,
        __Marshaller_ProductModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProductGrpc.Protos.GetAllProductsRequest, global::ProductGrpc.Protos.ProductModel> __Method_GetAllProducts = new grpc::Method<global::ProductGrpc.Protos.GetAllProductsRequest, global::ProductGrpc.Protos.ProductModel>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetAllProducts",
        __Marshaller_GetAllProductsRequest,
        __Marshaller_ProductModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProductGrpc.Protos.AddProductRequest, global::ProductGrpc.Protos.ProductModel> __Method_AddProduct = new grpc::Method<global::ProductGrpc.Protos.AddProductRequest, global::ProductGrpc.Protos.ProductModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProduct",
        __Marshaller_AddProductRequest,
        __Marshaller_ProductModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProductGrpc.Protos.UpdateProductRequest, global::ProductGrpc.Protos.ProductModel> __Method_UpdateProduct = new grpc::Method<global::ProductGrpc.Protos.UpdateProductRequest, global::ProductGrpc.Protos.ProductModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProduct",
        __Marshaller_UpdateProductRequest,
        __Marshaller_ProductModel);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProductGrpc.Protos.DeleteProductRequest, global::ProductGrpc.Protos.DeleteProductResponse> __Method_DeleteProduct = new grpc::Method<global::ProductGrpc.Protos.DeleteProductRequest, global::ProductGrpc.Protos.DeleteProductResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProduct",
        __Marshaller_DeleteProductRequest,
        __Marshaller_DeleteProductResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ProductGrpc.Protos.ProductModel, global::ProductGrpc.Protos.InsertBulkProductResponse> __Method_InsertBulkProduct = new grpc::Method<global::ProductGrpc.Protos.ProductModel, global::ProductGrpc.Protos.InsertBulkProductResponse>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "InsertBulkProduct",
        __Marshaller_ProductModel,
        __Marshaller_InsertBulkProductResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Test = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Test",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_google_protobuf_Empty);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ProductGrpc.Protos.ProductReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ProductProtoService</summary>
    [grpc::BindServiceMethod(typeof(ProductProtoService), "BindService")]
    public abstract partial class ProductProtoServiceBase
    {
      /// <summary>
      /// CRUD methods
      /// GetProductRequest message as a request, and ProductModel as a response
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ProductGrpc.Protos.ProductModel> GetProduct(global::ProductGrpc.Protos.GetProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 1 server stream and 1 client stream methods which are GetAllProducts and InsertBulkProduct.
      /// GetAllProducts is a server-streaming method. The client sends a single request message of type GetAllProductsRequest, and the server responds with a stream of ProductModel messages (multiple responses). This method is suitable for scenarios where the client needs to retrieve a large number of products or data that can be sent as a stream.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task GetAllProducts(global::ProductGrpc.Protos.GetAllProductsRequest request, grpc::IServerStreamWriter<global::ProductGrpc.Protos.ProductModel> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ProductGrpc.Protos.ProductModel> AddProduct(global::ProductGrpc.Protos.AddProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ProductGrpc.Protos.ProductModel> UpdateProduct(global::ProductGrpc.Protos.UpdateProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ProductGrpc.Protos.DeleteProductResponse> DeleteProduct(global::ProductGrpc.Protos.DeleteProductRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// InsertBulkProduct (Insertion en masse) is a client-streaming method. The client sends a stream of ProductModel messages (multiple requests) to the server, and the server responds with a single response message of type InsertBulkProductResponse. This method is useful when the client wants to send a batch of products or data to be processed in a single operation.
      /// </summary>
      /// <param name="requestStream">Used for reading requests from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::ProductGrpc.Protos.InsertBulkProductResponse> InsertBulkProduct(grpc::IAsyncStreamReader<global::ProductGrpc.Protos.ProductModel> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Check connectivity between the client and the server. The rpc Test declaration in the product.proto file is a simple unary gRPC method, where the client sends an empty request of type google.protobuf.Empty to the server, and the server responds with an empty response of type google.protobuf.Empty. This type of method is commonly used to perform a simple operation or check connectivity between the client and the server.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> Test(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ProductProtoServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetProduct, serviceImpl.GetProduct)
          .AddMethod(__Method_GetAllProducts, serviceImpl.GetAllProducts)
          .AddMethod(__Method_AddProduct, serviceImpl.AddProduct)
          .AddMethod(__Method_UpdateProduct, serviceImpl.UpdateProduct)
          .AddMethod(__Method_DeleteProduct, serviceImpl.DeleteProduct)
          .AddMethod(__Method_InsertBulkProduct, serviceImpl.InsertBulkProduct)
          .AddMethod(__Method_Test, serviceImpl.Test).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ProductProtoServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ProductGrpc.Protos.GetProductRequest, global::ProductGrpc.Protos.ProductModel>(serviceImpl.GetProduct));
      serviceBinder.AddMethod(__Method_GetAllProducts, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::ProductGrpc.Protos.GetAllProductsRequest, global::ProductGrpc.Protos.ProductModel>(serviceImpl.GetAllProducts));
      serviceBinder.AddMethod(__Method_AddProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ProductGrpc.Protos.AddProductRequest, global::ProductGrpc.Protos.ProductModel>(serviceImpl.AddProduct));
      serviceBinder.AddMethod(__Method_UpdateProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ProductGrpc.Protos.UpdateProductRequest, global::ProductGrpc.Protos.ProductModel>(serviceImpl.UpdateProduct));
      serviceBinder.AddMethod(__Method_DeleteProduct, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::ProductGrpc.Protos.DeleteProductRequest, global::ProductGrpc.Protos.DeleteProductResponse>(serviceImpl.DeleteProduct));
      serviceBinder.AddMethod(__Method_InsertBulkProduct, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::ProductGrpc.Protos.ProductModel, global::ProductGrpc.Protos.InsertBulkProductResponse>(serviceImpl.InsertBulkProduct));
      serviceBinder.AddMethod(__Method_Test, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Test));
    }

  }
}
#endregion
